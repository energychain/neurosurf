{
  "info": {
    "title": "Docker Browser-Use API",
    "description": "REST API for managing browser automation tasks using docker-browser-use",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "running",
              "finished",
              "failed"
            ]
          },
          "createdAt": {
            "type": "number",
            "format": "timestamp"
          },
          "startTime": {
            "type": "number",
            "format": "timestamp"
          },
          "endTime": {
            "type": "number",
            "format": "timestamp"
          },
          "runtime": {
            "type": "number",
            "description": "Runtime in milliseconds"
          },
          "outputStats": {
            "$ref": "#/components/schemas/OutputStats"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "OutputStats": {
        "type": "object",
        "properties": {
          "fileCount": {
            "type": "number"
          },
          "totalSize": {
            "type": "number"
          },
          "averageSize": {
            "type": "number"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://browserai.corrently.io",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Task management endpoints"
    },
    {
      "name": "Files",
      "description": "File retrieval endpoints"
    }
  ],
  "paths": {
    "/task": {
      "post": {
        "summary": "Create a new browser automation task",
        "description": "Creates a new task and queues it for execution. Returns a UUID that can be used to track the task status.",
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task": {
                    "type": "string",
                    "description": "Task description to be executed by browser-use",
                    "example": "Go to example.com and save the page title"
                  }
                },
                "required": [
                  "task"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for the created task"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "8695b496-0310-4cef-abcd-2459d62ec51d",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://browserai.corrently.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Get task status and information",
        "description": "Retrieves the current status of a task, including runtime statistics and response content if available",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Task ID to check status for"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "waiting",
                        "running",
                        "finished",
                        "failed"
                      ],
                      "description": "Current status of the task"
                    },
                    "runtime": {
                      "type": "number",
                      "description": "Task runtime in milliseconds (only present if finished)"
                    },
                    "outputStats": {
                      "type": "object",
                      "properties": {
                        "fileCount": {
                          "type": "number",
                          "description": "Number of output files"
                        },
                        "totalSize": {
                          "type": "number",
                          "description": "Total size of output files in bytes"
                        },
                        "averageSize": {
                          "type": "number",
                          "description": "Average size of output files in bytes"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if task failed",
                      "nullable": true
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of files generated by the task",
                      "nullable": true
                    },
                    "response": {
                      "type": "string",
                      "description": "Content of the first suitable response file (if under 100KB)",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Task not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "71d427bb-35be-40e2-8c74-b41d307b29f1",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://browserai.corrently.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound-1",
              "rate-limit-inbound-1"
            ]
          }
        }
      }
    },
    "/{taskId}/{filename}": {
      "get": {
        "summary": "Get task output file",
        "description": "Retrieves a specific output file from a completed task",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Task ID"
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the output file to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Output file contents",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Task not finished",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Task not finished"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task or file not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "File not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "a8edc86e-8381-4f87-84d5-1f77c3c4fdd2",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://browserai.corrently.io"
            }
          },
          "policies": {
            "inbound": [
              "rate-limit-inbound-2"
            ]
          }
        }
      }
    }
  }
}